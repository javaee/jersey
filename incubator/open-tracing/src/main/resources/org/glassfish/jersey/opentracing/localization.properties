#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# http://glassfish.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
opentracing.tracer.not.registered=OpenTracing feature is enabled, but no Tracer has been registered. Default no-op tracer will \
  be used.
opentracing.log.request.started=Request started.
opentracing.log.matching.started=Resource matching started.
opentracing.log.request.matched=Request matched, method: {0}
opentracing.log.locator.matched=Locator matched. Matched locators: {0}
opentracing.log.subresource.located=Subresource located: {0}
opentracing.log.request.filtering.started=Request filtering started.
opentracing.log.request.filtering.finished=Request filtering finished, {0} filter(s) applied.
opentracing.log.applied.request.filters=Applied request filters: {0}.
opentracing.log.resource.method.started=Resource method {0} started.
opentracing.log.response.filtering.started=Response filtering started.
opentracing.log.resource.method.finished=Resource method finished.
opentracing.log.response.filtering.finished=Response filtering finished, {0} filter(s) applied.
opentracing.log.applied.response.filters=Applied reqsponse filters: {0}.
opentracing.log.exception=Exception while processing the request: {0}.
opentracing.log.exception.mapper.found=Exception mapper found: {0}.
opentracing.log.exception.mapping.finished=Exception mapping finished: 
opentracing.log.exception.mapping.success=successfully mapped
opentracing.log.exception.mapping.noexception.or.failed=no exception or mapping failed.
opentracing.tag.request.headers=requestHeaders
opentracing.tag.response.headers=responseHeaders
opentracing.tag.has.request.entity=hasRequestEntity
opentracing.tag.has.response.entity=hasResponseEntity
opentracing.tag.response.length=responseLength
opentracing.tag.acceptable.media.types=acceptableMediaTypes
opentracing.span.prefix.client=jersey-client-

