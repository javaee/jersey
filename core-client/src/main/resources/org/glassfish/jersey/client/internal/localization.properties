#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2012-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#brief.message.identifier=Message text, possibly with some attributes "{0}" etc.
authentication.credentials.missing.basic=Credentials must be defined for basic authentication. Define username and password either when creating HttpAuthenticationFeature or use specific credentials for each request using the request property (see HttpAuthenticationFeature).
authentication.credentials.missing.digest=Credentials must be defined for digest authentication. Define username and password either when creating HttpAuthenticationFeature or use specific credentials for each request using the request property (see HttpAuthenticationFeature).
authentication.credentials.request.password.unsupported=Unsupported password type class. Password passed in the request property must be String or byte[].
chunked.input.closed=Chunked input has been closed already.
chunked.input.media.type.null=Specified chunk media type must not be null.
chunked.input.stream.closing.error=Error closing chunked input's underlying response input stream.
client.instance.closed=Client instance has been closed.
client.invocation.link.null=Link of the newly created invocation must not be null.
client.response.resolved.uri.null=Client response resolved URI must not be null.
client.response.resolved.uri.not.absolute=Client response resolved URI must be absolute.
client.response.status.null=Client response status must not be null.
client.rx.provider.null=RxInvokerProvider returned null.
client.rx.provider.not.registered=RxInvokerProvider for type {0} is not registered.
client.target.link.null=Link to the newly created target must not be null.
client.uri.template.null=URI template of the newly created target must not be null.
client.uri.null=URI of the newly created target must not be null.
client.uri.builder.null=URI builder of the newly created target must not be null.
digest.filter.qop.unsupported=The 'qop' (quality of protection) = {0} extension requested by the server is not supported by Jersey HttpDigestAuthFilter. Cannot authenticate against the server using Http Digest Authentication.
error.closing.output.stream=Error when closing the output stream.
error.committing.output.stream=Error while committing the request output stream.
error.digest.filter.generator=Error during initialization of random generator of Digest authentication.
error.http.method.entity.not.null=Entity must be null for http method {0}.
error.http.method.entity.null=Entity must not be null for http method {0}.
error.service.locator.provider.instance.request=Incorrect type of request instance {0}. Parameter must be a default Jersey ClientRequestContext implementation.
error.service.locator.provider.instance.response=Incorrect type of response instance {0}. Parameter must be a default Jersey ClientResponseContext implementation.
ignored.async.threadpool.size=Zero or negative asynchronous thread pool size specified in the client configuration property: [{0}] \
  Using default cached thread pool.
negative.chunk.size=Negative chunked HTTP transfer coding chunk size value specified in the client configuration property: [{0}] \
  Reverting to programmatically set default: [{1}]
negative.input.parameter="Input parameter {0} must not be negative."
null.connector.provider=ConnectorProvider must not be set to null.
null.executor.service=ExecutorService must not be set to null.
null.input.parameter=Input method parameter {0} must not be null.
null.scheduled.executor.service=ScheduledExecutorService must not be set to null.
null.ssl.context=Custom client SSL context, if set, must not be null.
null.keystore=Custom key store, if set, must not be null.
null.keystore.pasword=Custom key store password must not be null.
null.truststore=Custom trust store, if set, must not be null.
httpurlconnection.replaces.get.with.entity=Detected non-empty entity on a HTTP GET request. The underlying HTTP \
  transport connector may decide to change the request method to POST.
request.entity.writer.null=The entity of the client request is null.
response.to.exception.conversion.failed=Failed to convert a response into an exception.
response.type.is.null=Requested response type is null.
restricted.header.possibly.ignored=Attempt to send restricted header(s) while the [{0}] system property not set. Header(s) will \
   possibly be ignored.
restricted.header.property.setting.false=Restricted headers are not enabled using [{0}] system property (setting only takes \
  effect on connections created after the property has been set/changed).
restricted.header.property.setting.true=Restricted headers are enabled using [{0}] system property(setting only takes effect on\
   connections created after the property has been set/changed).
request.entity.already.written=The entity was already written in this request. The entity can be written (serialized into the output stream) only once per a request.
unexpected.error.response.processing=Unexpected error during response processing.
use.encoding.ignored=Value {1} of {0} client property will be ignored as it is not a valid supported encoding. \
  Valid supported encodings are: {2}
using.fixed.async.threadpool=Using fixed-size thread pool of size [{0}] for asynchronous client invocations.
error.request.cancelled=Request cancelled by the client call.
error.listener.init=ClientLifecycleListener {0} failed to initialize properly.
error.listener.close=ClientLifecycleListener {0} failed to close properly.
error.shutdownhook.close=Client shutdown hook {0} failed.
