#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# http://glassfish.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

ambiguous.parameter=Parameter {1} of {0} MUST be only one of a path, query, matrix or header parameter.
ambiguous.resource.method="Multiple methods found to suit client request with accept header {0}. Selected the first method from the following list.
ambiguous.rms.in=A resource, {0}, has ambiguous (sub-)resource method for HTTP method {1} and input mime-types as defined by @Consumes annotation at Java methods {2} and {3}. This could cause an error for conflicting output types!
ambiguous.rms.out=A resource, {0}, has ambiguous (sub-)resource method for HTTP method {1} and output mime-types as defined by @Produces annotation at Java methods {2} and {3}.
ambiguous.fatal.rms=A resource, {0}, has ambiguous (sub-)resource method for HTTP method {1} and input mime-types as defined by @Consumes and @Produces annotations at Java methods {2} and {3}. These two methods produces and consumes exactly the same mime-types and therefore their invocation as a resource methods will always fail.
ambiguous.srls=A resource, {0}, has ambiguous sub-resource model for URI template {1}, which matches with template {2}
closeable.unable.to.close=Error while closing {0}.
closeable.injected.request.context.null=Injected request context is 'null' on thread {0}.
default.could.not.process.method=Default value, {0} could not be processed by method {1}.
error.marshalling.jaxb=Error marshalling JAXB object of type "{0}".
error.msg=ERROR: {0}
error.processing.method=Error processing resource method, {0}, for ResourceMethodDispatchProvider, {1}.
error.unmarshalling.jaxb=Error unmarshalling JAXB object of type "{0}".
errors.and.warnings.detected.with.resource.classes=The following errors and warnings have been detected with resource classes: {0}
get.returns.void=A HTTP GET method, {0}, MUST return a non-void type.
get.consumes.entity=A HTTP GET method, {0}, should not consume any entity.
get.consumes.form.param=A HTTP GET method, {0}, should not consume any form parameter.
invalid.mapping.format=Provided {0} property value "{1}" is invalid. It should contain two parts, key and value, separated by ':'.
invalid.mapping.key.empty=The key in {0} mappings record "{1}" is empty.
invalid.mapping.type=Provided {0} property value type is invalid. Acceptable types are String and String[].
invalid.mapping.value.empty=The value in {0} mappings record "{1}" is empty.
multiple.http.method.designators=A (sub-)resource method, {0}, should have only one HTTP method designator. It currently has the following designators defined: {1}
new.ar.created.by.introspection.modeler=A new abstract resource created by IntrospectionModeler: {0}
non.instantiatable.class=Resource/provider class {0} cannot be instantiated and will be ignored.
non.pub.res.method=A resource method, {0}, MUST be public scoped otherwise the method is ignored
non.pub.sub.res.method=A sub-resource method, {0}, MUST be public scoped otherwise the method is ignored
non.pub.sub.res.loc=A sub-resource model, {0}, MUST be public scoped otherwise the method is ignored
# {0} = parameter name; {1} = parameter type; {2} = field description
parameter.unresolvable=Parameter {0} of type {1} from {2} is not resolvable to a concrete type.
rc.not.modifiable=The resource configuration is not modifiable in this context.
res.uri.path.invalid=A root resource class, {0}, has an invalid URI path: {1}.
sub.res.method.treated.as.res.method=A sub-resource method, {0}, with URI template, "{1}", is treated as a resource method
subres.method.uri.path.invalid=A sub-resource method, {0}, has an invalid URI path: {1}
subres.loc.has.entity.param=A sub-resource model, {0}, can not have an entity parameter. Try to move the parameter to the corresponding resource method.
subres.loc.returns.void=A sub-resource model, {0}, MUST return a non-void type.
subres.loc.uri.path.invalid=A sub-resource model, {0}, has an invalid URI path: {1}
type.of.method.not.resolvable.to.concrete.type=Return type, {0}, of method, {1}, is not resolvable to a concrete type"
unable.to.load.class=Class "{0}" cannot be loaded.
warning.msg=WARNING: {0}
warnings.detected.with.resource.classes=The following warnings have been detected with resource classes: {0}
form.param.method.error=The @FormParam is utilized when the request method is GET
form.param.content-type.error=The @FormParam is utilized when the content type of the request entity is not application/x-www-form-urlencoded
#unable.to.write.mimemultipart=Unable to write MimeMultipart content.
#resource.method=Resource, {0}, with method, {1}
#resource.not.acceptable={0}, is returning a MIME type, "{1}", that is not acceptable.
#resource.mimetype.not.in.produceMime={0}, is returning a MIME type, "{1}", that is acceptable but not a member of @ProduceMime, {2}.
#nested.error=NESTED ERROR: {0}.
#failed.to.createPatternFor.web.resource=Failed to createPatternFor Web resource: {0}.
#default.could.not.process.constructor=Default value, {0} could not be processed by constructor {1}.
#exception.invoking.resource.method=Exception invoking Web resource method.
#illegal.initial.capacity=Illegal initial capacity: {0}.
#illegal.load.factor=Illegal load factor: {0}.
#generic.type.not.supported=Generic type, {0}, not support for parameter {1}.
#not.valid.httpmethod=Method, {0}, annotated with {1} of resource, {2}, is not recognized as valid resource method.
#not.valid.dynamicresolvingmethod=Method, {0}, annotated with URI template {1} of resource, {2}, is not recognized as valid Java method annotated with @Path.
#quality.more.than.three=Quality value "{0}" has more than 3 digits after the decimal point.
#quality.greater.than.one=Quality value "{0}" is greater than 1.
#object.not.a.webResource=Object, "{0}": is not a Web resource since it is not annotated with @Path.
#bad.uritemplate=Web resource, "{0}": URI template "{1}" of @Path could not be processed on Web resource.
#bad.class.consumemime=Web resource, "{0}": MIME types "{1}" of @ConsumeMime could not be processed on Web resource.
#bad.class.producemime=Web resource, "{0}": MIME types "{1}" of @ProcudeMime could not be processed on Web resource.
#bad.method.httpmethod=Web resource, "{0}": HTTP method "{1}" of @HttpMethod could not be processed on method "{2}" of Web Resource.
#bad.consumemime=Web resource, "{0}": HTTP method "{1}" of @HttpMethod could not be processed on method "{2}" of Web Resource.
#bad.method.consumemime=Web resource, "{0}": MIME types "{1}" of @ConsumeMime could not be processed on method "{2} of Web Resource.
#bad.method.producemime=Web resource, "{0}": MIME types "{1}" of @ProduceMime could not be processed on method "{2} of Web Resource.
#illegal.config.syntax=Illegal configuration-file syntax.
#illegal.provider.class.name=Illegal provider-class name: {0}.
#provider.not.found=Provider {0} not found.
#provider.could.not.be.created=Provider {0} could not be instantiated: {1}
#no.webresourceclass.in.webxml=No "webresourceclass" specified in web.xml.
#byte.array.cannot.be.null=data parameter, of type byte[], cannot be null.
#bad.content.type=The HTTP header field "Content-Type" with value "{0}" could not be parsed.
#bad.mime.type=The MIME type of the representation with value "{0}" could not be parsed.
#error.no.sub.res.method.model.found=A resource class, {0}, does not have any resource method, sub-resource method, or sub-resource model.
#error.res.uri.path.required=A root resource class, {0}, MUST have a URI path.
#fatal.issues.found.at.res.class=Fatal issues found at class {0}. See logs for more details.
#web.app.already.initiated=Web application is already initiated.
#no.root.res.in.res.cfg=The ResourceConfig instance does not contain any root resource classes.
#root.res.no.public.ctor=A root resource, {0}, MUST have a public constructor
#ambiguous.ctors=A root resource, {0}, has ambiguous constructors to use for initialization
#ambiguous.srms.in=A resource, {0}, has ambiguous sub-resource method for HTTP method {1}, URI path template {2}, and input mime-type: {3}. The problematic mime-type sets (as defined by @Consumes annotation at Java methods {4} and {5}) are {6} and {7}. This could cause an error for conflicting output types!
#ambiguous.srms.out=A resource, {0}, has ambiguous sub-resource method for HTTP method {1}, URI path template {2}, and output mime-type: {3}. The problematic mime-type sets (as defined by @Produces annotation at Java methods {4} and {5}) are {6} and {7}
#ambiguous.rr.path=A root resource, {0}, has a non-unique URI template {1}
